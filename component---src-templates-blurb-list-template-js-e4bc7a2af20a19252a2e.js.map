{"version":3,"sources":["webpack:///./src/components/blurbbox.tsx","webpack:///./node_modules/@material-ui/icons/esm/ArrowBack.js","webpack:///./node_modules/@material-ui/icons/esm/ArrowForward.js","webpack:///./src/components/pagebutton.tsx","webpack:///./src/components/pagecomponent.tsx","webpack:///./src/templates/blurb-list-template.js","webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["BlurbBox","props","Grid","item","xs","to","path","style","textDecoration","container","spacing","lg","md","sm","fluid","image","margin","padding","className","blurbKey","title","summary","fontSize","color","date","createSvgIcon","d","PageButton","marginLeft","marginRight","display","children","PageComponent","previousPagePath","nextPagePath","currentPage","marginBottom","hasPreviousPage","ArrowBack","marginTop","totalPages","hasNextPage","ArrowForward","BlurbListTemplate","data","blurbs","allMarkdownRemark","edges","console","log","pageInfo","pageCount","totalCount","map","node","frontmatter","fields","slug","key","type","childImageSharp","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","_props$md","_props$sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","root","StyledGrid","theme","boxSizing","flexWrap","width","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name"],"mappings":"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","file":"component---src-templates-blurb-list-template-js-e4bc7a2af20a19252a2e.js","sourcesContent":["import { Grid } from \"@material-ui/core\";\r\nimport { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Img from \"gatsby-image\"\r\n\r\ninterface Props {\r\n    title: string;\r\n    date: string;\r\n    summary: string;\r\n    path: string;\r\n    image: any;\r\n    blurbKey: string;\r\n}\r\n\r\nconst BlurbBox = (props: Props) => {\r\n\treturn (\r\n\t\t<Grid item xs={12}>\r\n            <Link to={props.path} style={{ textDecoration: 'none' }}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item lg={4} md={5} sm={6} xs={12}>\r\n                        <Img fluid={props.image} style={{margin: 0}} />\r\n                    </Grid>\r\n                    <Grid item md={5} sm={6} xs={12}>\r\n                        <div style={{padding: 10}}>\r\n                            <p className=\"blurbKey\">#{props.blurbKey}</p>\r\n                            <h3 className=\"titleText secondary\">{props.title}</h3>\r\n                            <p className=\"summaryText\">{props.summary}</p>\r\n                            <span style={{fontSize: '9pt', color: 'grey'}}>{props.date}</span>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Link>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default BlurbBox;","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');","import React from \"react\"\r\nimport \"../styles/AppStyle.css\"\r\nimport { Link } from \"gatsby\"\r\n\r\ninterface Props {\r\n    path: string;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst PageButton: React.FC<Props> = (props: Props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"page-button\" style={{marginLeft: 8, marginRight: 8}}>\r\n                <Link to={props.path}>\r\n                    <div style={{display: 'flex'}}>\r\n                        {props.children}\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default PageButton;\r\n","import { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport PageButton from \"./pagebutton\";\r\n\r\ninterface Props {\r\n    path: string;\r\n    currentPage: number;\r\n    totalPages: number;\r\n    hasPreviousPage: boolean;\r\n    hasNextPage: boolean;\r\n}\r\n\r\nconst PageComponent = (props: Props) => {\r\n    let previousPagePath = props.path;\r\n    let nextPagePath = `${props.path}/${props.currentPage + 1}`;\r\n    \r\n    if(props.currentPage > 2) {\r\n        previousPagePath = `${props.path}/${props.currentPage - 1}`;\r\n    }\r\n\r\n\treturn (\r\n        <div style={{ display: 'flex', marginBottom: 10}}>\r\n            {\t\t\t\t\t\r\n                props.hasPreviousPage &&\r\n                <PageButton path={previousPagePath}>\r\n                    <ArrowBack style={{marginTop: 'auto', marginBottom: 'auto'}} />\r\n                </PageButton>\r\n            }\r\n            <div style={{marginBottom: 'auto'}}>\r\n                Page {props.currentPage} of {props.totalPages}\r\n            </div>\r\n            {\t\t\t\t\t\r\n                props.hasNextPage &&\r\n                <PageButton path={nextPagePath}>\r\n                    <ArrowForward style={{marginTop: 'auto', marginBottom: 'auto'}} />\r\n                </PageButton>\r\n            }\r\n        </div>\r\n\t)\r\n}\r\n\r\nexport default PageComponent;\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n// import Img from 'gatsby-image';\r\nimport SEO from \"../components/seo\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport BlurbBox from \"../components/blurbbox\"\r\nimport PageComponent from '../components/pagecomponent'\r\n\r\nexport default function BlurbListTemplate({ data }) {\r\n\tconst blurbs = data.allMarkdownRemark.edges\r\n\t\r\n\tconsole.log(data);\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<SEO title=\"Blurbs\" />\r\n\t\t\t<PageComponent\r\n\t\t\t\tpath=\"/blurbs\"\r\n\t\t\t\tcurrentPage={data.allMarkdownRemark.pageInfo.currentPage}\r\n\t\t\t\ttotalPages={data.allMarkdownRemark.pageInfo.pageCount}\r\n\t\t\t\thasPreviousPage={data.allMarkdownRemark.pageInfo.hasPreviousPage}\r\n\t\t\t\thasNextPage={data.allMarkdownRemark.pageInfo.hasNextPage}\r\n\t\t\t/>\t\r\n\t\t\t<div style={{ marginBottom: 40 }}>\r\n\t\t\t\t<h2>{data.allMarkdownRemark.pageInfo.totalCount} Blurbs</h2>\r\n\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t{blurbs.map(({ node }) => {\r\n\t\t\t\t\t\tconst title = node.frontmatter.title || node.fields.slug\r\n\t\t\t\t\t\treturn <BlurbBox\r\n\t\t\t\t\t\t\tkey={node.fields.slug}\r\n\t\t\t\t\t\t\tblurbKey={node.frontmatter.type === \"project\" ? \"project\" : node.frontmatter.key}\r\n\t\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\t\tdate={node.frontmatter.date}\r\n\t\t\t\t\t\t\tsummary={node.frontmatter.summary}\r\n\t\t\t\t\t\t\tpath={node.fields.slug}\r\n\t\t\t\t\t\t\timage={node.frontmatter.image.childImageSharp.fluid}\r\n\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t\t<PageComponent\r\n\t\t\t\tpath=\"/blurbs\"\r\n\t\t\t\tcurrentPage={data.allMarkdownRemark.pageInfo.currentPage}\r\n\t\t\t\ttotalPages={data.allMarkdownRemark.pageInfo.pageCount}\r\n\t\t\t\thasPreviousPage={data.allMarkdownRemark.pageInfo.hasPreviousPage}\r\n\t\t\t\thasNextPage={data.allMarkdownRemark.pageInfo.hasNextPage}\r\n\t\t\t/>\t\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport const query = graphql`\r\n  query blogListQuery($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      pageInfo {\r\n        currentPage\r\n        hasNextPage\r\n        hasPreviousPage\r\n        itemCount\r\n        pageCount\r\n        totalCount\r\n        perPage\r\n      }\r\n      edges {\r\n        node {\r\n            id\r\n            fields {\r\n                slug\r\n            }\r\n\t\t\tfrontmatter {\r\n\t\t\t\tdate\r\n\t\t\t\ttitle\r\n\t\t\t\tsummary\r\n\t\t\t\ttype\r\n\t\t\t\tfeatured\r\n\t\t\t\tkey\r\n\t\t\t\timage {\r\n\t\t\t\t  id\r\n\t\t\t\t  childImageSharp {\r\n\t\t\t\t\t  fluid(quality: 90, maxWidth: 1920) {\r\n\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t  }\r\n            excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import \"core-js/modules/es.array.reduce.js\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}