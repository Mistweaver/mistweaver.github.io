{"version":3,"sources":["webpack://bryce-egley-dot-com/./src/pages/games/PacMan.tsx"],"names":["PacMan","pacmanXPosition","pacmanYPosition","velocity","lastFrameTimeMs","delta","timestep","fps","framesThisSecond","lastFpsUpdate","playerXPosition","playerYPosition","playerInsideArena","update","rotation","fpsColor","requestAnimationFrame","mainLoop","timestamp","numUpdateSteps","Math","atan2","PI","end","id","className","style","color","round","onMouseMove","event","offsetX","offsetY","onMouseEnter","onMouseLeave","left","top","transform","WebkitTransform","msTransform","OTransform"],"mappings":"yLAGaA,EAAS,WAelB,IAAIC,EAAkB,EAClBC,EAAkB,EAIlBC,EAAW,GAEXC,EAAkB,EAElBC,EAAQ,EACRC,EAAW,IAAO,GAClBC,EAAM,GACNC,EAAmB,EACnBC,EAAgB,EAChBC,EAAkB,IAClBC,EAAkB,GAClBC,GAAoB,EAIxB,SAASC,EAAOR,GAGTO,GACCT,EAAW,GAIWF,EACAC,EACnBQ,EAAkBT,EACjBA,GAAmBE,EAAWE,EAE9BJ,GAAmBE,EAAWE,EAE9BM,EAAkBT,EAClBA,GAAmBC,EAAWE,EAE9BH,GAAmBC,EAAWE,KAGlCJ,GAAmBE,EAAWE,IAnC1B,KAoC4BJ,GAAmB,KAAGE,GAAYA,GAa1E,IAIIW,EAAW,EA+Bf,IAAIC,EAAW,GAsFf,OAxCAC,uBApCA,SAASC,EAASC,GAEd,GAAIA,EAAYd,EAAmB,IA9F1B,GA+FLY,sBAAsBC,OAD1B,CAIAZ,GAASa,EAAYd,EACrBA,EAAkBc,EAIdA,EAAYT,EAAgB,MAC5BF,EAAM,IAAOC,EAAmB,IAAOD,EAEvCE,EAAgBS,EAChBV,EAAmB,GAEvBA,IAGA,IADA,IAAIW,EAAiB,EACdd,GAASC,GAGZ,GAFAO,EAAOP,GACPD,GAASC,IACHa,GAAkB,IAAK,CAvCjCd,EAAQ,EAyCA,MA9DDJ,EAEAC,EASPY,EAAYM,KAAKC,MAAOX,EAAkBT,EAAmBU,EAAkBT,IAAqB,IAAMkB,KAAKE,KAAO,EAAK,GAiB/H,SAAaf,GACLA,EAAM,GACNQ,EAAW,QAENR,EAAM,KACXQ,EAAW,OAmCfQ,CAAIhB,GAEJS,sBAAsBC,OA4CtB,uBAAKO,GAAG,iBAAiBC,UAAU,OAC/B,uBAAKD,GAAG,aAAaE,MAAO,CAACC,MAAOZ,IAAYK,KAAKQ,MAAMrB,GAAO,QAClE,uBAAKiB,GAAG,gBACR,uBACIA,GAAG,QACHK,YA3CZ,SAAmBC,GACfpB,EAAkBoB,EAAMC,QACxBpB,EAAkBmB,EAAME,SA0ChBC,aAtCZ,SAAoBH,GAChBlB,GAAoB,EACpBF,GAAmB,EACnBC,GAAmB,GAoCXuB,aAjCZ,SAAoBJ,GAChBlB,GAAoB,EACpBF,GAAmB,EACnBC,GAAmB,IAgCX,uBAAKa,GAAG,SAASC,UAAU,SAASC,MAAO,CAACS,KAAM,YAAaC,IAAK,YAAaC,UAAW,uBACxF,uBACIb,GAAG,gBACHE,MAAO,CACHW,UAAW,UAAYvB,EAAW,OAClCwB,gBAAiB,UAAYxB,EAAW,OAExCyB,YAAa,UAAYzB,EAAW,OACpC0B,WAAY,UAAY1B,EAAW,SAGvC,uBAAKW,UAAU,eACf,uBAAKA,UAAU,oBAGvB,uBAAKD,GAAG,cACR,uBAAKA,GAAG,gBACR,uBAAKA,GAAG,iBACJ","file":"component---src-pages-games-pac-man-tsx-a7f72db1c9676fcddbce.js","sourcesContent":["import React from \"react\";\r\nimport './pacman.css';\r\n\r\nexport const PacMan = () => {\r\n\r\n    // grab elements\r\n    // let container = document.getElementById(\"arena\");\r\n    // let box = document.getElementById(\"pacman\");\r\n    // let pacman = document.getElementById(\"pacman\");\r\n    // let pacmanDisplay = document.getElementById(\"pacmanDisplay\");\r\n    // let fpsDisplay = document.getElementById('fpsDisplay');\r\n    // let lifeDisplay = document.getElementById('lifeDisplay');\r\n    // debug elements\r\n    // let centerDot = document.getElementById('centerDot');\r\n    // let positionDot = document.getElementById('positionDot');\r\n    // let boxPos = 10;\r\n    // let pacmanXPosition = pacman.offsetLeft; // - (pacman.offsetWidth / 2); \r\n    // let pacmanYPosition = pacman.offsetTop; // - (pacman.offsetHeight / 2);\r\n    let pacmanXPosition = 0;\r\n    let pacmanYPosition = 0;\r\n    let pacmanLastXPosition = 0; // = pacman.offsetLeft;\r\n    let pacmanLastYPosition = 0; // = pacman.offsetTop;\r\n    // let lastBoxPos = 10;\r\n    let velocity = 0.2;\r\n    let limit = 300;\r\n    let lastFrameTimeMs = 0;\r\n    let maxFPS = 60;\r\n    let delta = 0;\r\n    let timestep = 1000 / 60;\r\n    let fps = 60;\r\n    let framesThisSecond = 0;\r\n    let lastFpsUpdate = 0;\r\n    let playerXPosition = 200;\r\n    let playerYPosition = 23;\r\n    let playerInsideArena = false;\r\n\r\n    // pacman.style.transform = \"rotate(0deg)\";\r\n\r\n    function update(delta: number) {\r\n        // console.log(\"Update\");\r\n        // console.log(\"Delta: \" + delta);\r\n        if(playerInsideArena) {\r\n            velocity = 0.2;\r\n            // console.log(\"Player position: \" + playerXPosition + \",\" + playerYPosition);\r\n            // console.log(\"Pacman position: \" + pacman.offsetLeft + \" \" + pacman.offsetTop);\r\n            // console.log(\"Pacman dimensions: \" + pacman.offsetHeight + \" \" + pacman.offsetWidth);\r\n            pacmanLastXPosition = pacmanXPosition;\r\n            pacmanLastYPosition = pacmanYPosition;\r\n            if(playerXPosition > pacmanXPosition) {\r\n                pacmanXPosition += velocity * delta;\r\n            } else {\r\n                pacmanXPosition -= velocity * delta;\r\n            }\r\n            if (playerYPosition > pacmanYPosition) {\r\n                pacmanYPosition += velocity * delta;\r\n            } else {\r\n                pacmanYPosition -= velocity * delta;\r\n            }\r\n        } else {\r\n            pacmanXPosition += velocity * delta;\r\n            if (pacmanXPosition >= limit || pacmanXPosition <= 0) velocity = -velocity;\r\n        }\r\n        \r\n        // check arena boundary conditions\r\n        // console.log(\"Pacman dimensions: \" + pacman.offsetWidth + \" (width), \" + pacman.offsetHeight + \" (height)\");\r\n        // console.log(\"Pacman center: \" + (pacman.offsetWidth / 2) + \" \" + (pacman.offsetHeight / 2) );\r\n        // if (center of pacman + radius is less than top boundary, less than left boundary, greater than right boundary, greater than bottom boundary)\r\n            // reverse direction\r\n        // check div boundary conditions\r\n        // if center collides with object in arena, reverse direction\r\n        // if center collides with player, lose a life\r\n    }\r\n\r\n    let dotX = 0;\r\n    let dotY = 0;\r\n    let centerX = 0;\r\n    let centerY = 0;\r\n    let rotation = 0;\r\n\r\n    function draw(interp: number) {\r\n        // positionDot.style.left = pacman.offsetLeft + 'px';\r\n        dotX = pacmanXPosition;\r\n        // positionDot.style.top =pacman.offsetTop + 'px';\r\n        dotY = pacmanYPosition;\r\n        // centerDot.style.left =  pacman.offsetLeft + (pacman.offsetWidth / 2) + 'px';\r\n        // centerX = pacmanXPosition + (pacman.offsetWidth / 2);\r\n        // centerDot.style.top =pacman.offsetTop + (pacman.offsetHeight / 2) + 'px';\r\n        // centerY = pacman.offsetTop + (pacman.offsetHeight / 2);\r\n        // pacman.style.left = (pacmanLastXPosition + (pacmanXPosition - pacmanLastXPosition) * interp) + 'px';\r\n        // pacman.style.top = (pacmanLastYPosition + (pacmanYPosition - pacmanLastYPosition) * interp) + (pacman.offsetWidth / 2) + 'px'; //- (pacman.offsetWidth / 2)\r\n        \r\n        // let style = \"rotate(\" + ((Math.atan2((playerXPosition - pacmanXPosition), (playerYPosition - pacmanYPosition)) * (180 / Math.PI) * -1) + 90)+ \"deg)\"\r\n        rotation = (Math.atan2((playerXPosition - pacmanXPosition), (playerYPosition - pacmanYPosition)) * (180 / Math.PI) * -1) + 90;\r\n        // pacmanDisplay.style.transform = style;\r\n        // pacmanDisplay.style.webkitTransform = style;\r\n        // pacmanDisplay.style.mozTransform = style;\r\n        // pacmanDisplay.style.msTransform = style;\r\n        // pacmanDisplay.style.oTransform = style;\r\n        \r\n    }\r\n\r\n    function panic() {\r\n        delta = 0;\r\n    }\r\n\r\n    function begin(timestamp: number, delta: number) {\r\n    }\r\n\r\n    let fpsColor = \"\";\r\n    function end(fps: number) {\r\n        if (fps < 25) {\r\n            fpsColor = 'black';\r\n        }\r\n        else if (fps > 30) {\r\n            fpsColor = 'red';\r\n        }\r\n    }\r\n\r\n    function mainLoop(timestamp: number) {\r\n        // Throttle the frame rate.    \r\n        if (timestamp < lastFrameTimeMs + (1000 / maxFPS)) {\r\n            requestAnimationFrame(mainLoop);\r\n            return;\r\n        }\r\n        delta += timestamp - lastFrameTimeMs;\r\n        lastFrameTimeMs = timestamp;\r\n\r\n        begin(timestamp, delta);\r\n\r\n        if (timestamp > lastFpsUpdate + 1000) {\r\n            fps = 0.25 * framesThisSecond + 0.75 * fps;\r\n\r\n            lastFpsUpdate = timestamp;\r\n            framesThisSecond = 0;\r\n        }\r\n        framesThisSecond++;\r\n\r\n        var numUpdateSteps = 0;\r\n        while (delta >= timestep) {\r\n            update(timestep);\r\n            delta -= timestep;\r\n            if (++numUpdateSteps >= 240) {\r\n                panic();\r\n                break;\r\n            }\r\n        }\r\n\r\n        draw(delta / timestep);\r\n\r\n        end(fps);\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n\r\n    /************* calculate player mouse position ***********/\r\n    function moveMouse(event: any) {\r\n        playerXPosition = event.offsetX; // + Math.floor(event.offsetWidth / 2);\r\n        playerYPosition = event.offsetY; // + Math.floor(event.offsetHeight / 2);\r\n        // console.log(\"Mouse offset position: \" + event.offsetX + \" \" + event.offsetY);\r\n    }\r\n    \r\n    function mouseEnter(event: any) {\r\n        playerInsideArena = true;\r\n        playerXPosition = -1;\r\n        playerYPosition = -1;\r\n    }\r\n\r\n    function mouseLeave(event: any) {\r\n        playerInsideArena = false;\r\n        playerXPosition = -1;\r\n        playerYPosition = -1;\r\n    }\r\n\r\n    /*var mouse = {\r\n        _x: 0,\r\n        _y: 0,\r\n        x: 0,\r\n        y: 0,\r\n        updatePosition: function(event: any) {\r\n            var e = event || window.event;\r\n            this.x = e.clientX - this._x;\r\n            this.y = (e.clientY - this._y) * -1;\r\n        },\r\n        setOrigin: function(e: any) {\r\n            this._x = e.offsetLeft + Math.floor(e.offsetWidth / 2);\r\n            this._y = e.offsetTop + Math.floor(e.offsetHeight / 2);\r\n        },\r\n        show: function() {\r\n            return \"(\" + this.x + \", \" + this.y + \")\";\r\n        }\r\n    }*/\r\n\r\n    return(\r\n        <div id=\"arenacontainer\" className=\"box\">\r\n            <div id=\"fpsDisplay\" style={{color: fpsColor}}>{Math.round(fps) + ' FPS'}</div>\r\n            <div id=\"lifeDisplay\"></div>\r\n            <div \r\n                id=\"arena\"\r\n                onMouseMove={moveMouse}\r\n                onMouseEnter={mouseEnter}\r\n                onMouseLeave={mouseLeave}\r\n            >\r\n                <div id=\"pacman\" className=\"pacman\" style={{left: '314.667px', top: '108.984px', transform: 'rotate(221.977deg)'}}>\r\n                    <div \r\n                        id=\"pacmanDisplay\"                                   \r\n                        style={{\r\n                            transform: 'rotate(' + rotation + 'deg)',\r\n                            WebkitTransform: 'rotate(' + rotation + 'deg)',\r\n                            // MozTransform: 'rotate(' + rotation + 'deg)',\r\n                            msTransform: 'rotate(' + rotation + 'deg)',\r\n                            OTransform: 'rotate(' + rotation + 'deg)',\r\n                        }}\r\n                    >\r\n                        <div className=\"pacman-top\"></div>\r\n                        <div className=\"pacman-bottom\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"centerDot\"></div>\r\n                <div id=\"positionDot\"></div>\r\n                <div id=\"arenatitlebox\">\r\n                    <h3>Video Games</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/*$(document).ready(function() {\r\n    // grab elements\r\n    let container = document.getElementById(\"arena\");\r\n    let box = document.getElementById(\"pacman\");\r\n    let pacman = document.getElementById(\"pacman\");\r\n    let pacmanDisplay = document.getElementById(\"pacmanDisplay\");\r\n    let fpsDisplay = document.getElementById('fpsDisplay');\r\n    let lifeDisplay = document.getElementById('lifeDisplay');\r\n    // debug elements\r\n    let centerDot = document.getElementById('centerDot');\r\n    let positionDot = document.getElementById('positionDot');\r\n    let boxPos = 10;\r\n    let pacmanXPosition = pacman.offsetLeft; // - (pacman.offsetWidth / 2); \r\n    let pacmanYPosition = pacman.offsetTop; // - (pacman.offsetHeight / 2);\r\n    let pacmanLastXPosition; // = pacman.offsetLeft;\r\n    let pacmanLastYPosition; // = pacman.offsetTop;\r\n    let lastBoxPos = 10;\r\n    let boxVelocity = 0.2;\r\n    let limit = 300;\r\n    let lastFrameTimeMs = 0;\r\n    let maxFPS = 60;\r\n    let delta = 0;\r\n    let timestep = 1000 / 60;\r\n    let fps = 60;\r\n    let framesThisSecond = 0;\r\n    let lastFpsUpdate = 0;\r\n    let playerXPosition = 200;\r\n    let playerYPosition = 23;\r\n    let playerInsideArena = false;\r\n    pacman.style.transform = \"rotate(0deg)\";\r\n    function update(delta) {\r\n        // console.log(\"Update\");\r\n        // console.log(\"Delta: \" + delta);\r\n        if(playerInsideArena) {\r\n            boxVelocity = 0.2;\r\n            // console.log(\"Player position: \" + playerXPosition + \",\" + playerYPosition);\r\n            // console.log(\"Pacman position: \" + pacman.offsetLeft + \" \" + pacman.offsetTop);\r\n            // console.log(\"Pacman dimensions: \" + pacman.offsetHeight + \" \" + pacman.offsetWidth);\r\n            pacmanLastXPosition = pacmanXPosition;\r\n            pacmanLastYPosition = pacmanYPosition;\r\n            if(playerXPosition > pacmanXPosition) {\r\n                pacmanXPosition += boxVelocity * delta;\r\n            } else {\r\n                pacmanXPosition -= boxVelocity * delta;\r\n            }\r\n            if (playerYPosition > pacmanYPosition) {\r\n                pacmanYPosition += boxVelocity * delta;\r\n            } else {\r\n                pacmanYPosition -= boxVelocity * delta;\r\n            }\r\n        } else {\r\n            pacmanXPosition += boxVelocity * delta;\r\n            if (pacmanXPosition >= limit || pacmanXPosition <= 0) boxVelocity = -boxVelocity;\r\n        }\r\n        \r\n        // check arena boundary conditions\r\n        // console.log(\"Pacman dimensions: \" + pacman.offsetWidth + \" (width), \" + pacman.offsetHeight + \" (height)\");\r\n        // console.log(\"Pacman center: \" + (pacman.offsetWidth / 2) + \" \" + (pacman.offsetHeight / 2) );\r\n        // if (center of pacman + radius is less than top boundary, less than left boundary, greater than right boundary, greater than bottom boundary)\r\n            // reverse direction\r\n        // check div boundary conditions\r\n        // if center collides with object in arena, reverse direction\r\n        // if center collides with player, lose a life\r\n    }\r\n\r\n    function draw(interp) {\r\n        positionDot.style.left = pacman.offsetLeft + 'px';\r\n        positionDot.style.top =pacman.offsetTop + 'px';\r\n        centerDot.style.left =  pacman.offsetLeft + (pacman.offsetWidth / 2) + 'px';\r\n        centerDot.style.top =pacman.offsetTop + (pacman.offsetHeight / 2) + 'px';\r\n        pacman.style.left = (pacmanLastXPosition + (pacmanXPosition - pacmanLastXPosition) * interp) + 'px';\r\n        pacman.style.top = (pacmanLastYPosition + (pacmanYPosition - pacmanLastYPosition) * interp) + (pacman.offsetWidth / 2) + 'px'; //- (pacman.offsetWidth / 2)\r\n        \r\n        let style = \"rotate(\" + ((Math.atan2((playerXPosition - pacmanXPosition), (playerYPosition - pacmanYPosition)) * (180 / Math.PI) * -1) + 90)+ \"deg)\"\r\n        pacmanDisplay.style.transform = style;\r\n        pacmanDisplay.style.webkitTransform = style;\r\n        pacmanDisplay.style.mozTransform = style;\r\n        pacmanDisplay.style.msTransform = style;\r\n        pacmanDisplay.style.oTransform = style;\r\n        \r\n        fpsDisplay.textContent = Math.round(fps) + ' FPS';\r\n    }\r\n\r\n    function panic() {\r\n        delta = 0;\r\n    }\r\n\r\n    function begin() {\r\n    }\r\n\r\n    function end(fps) {\r\n        if (fps < 25) {\r\n            // box.style.backgroundColor = 'black';\r\n        }\r\n        else if (fps > 30) {\r\n           //  box.style.backgroundColor = 'red';\r\n        }\r\n    }\r\n\r\n    function mainLoop(timestamp) {\r\n        // Throttle the frame rate.    \r\n        if (timestamp < lastFrameTimeMs + (1000 / maxFPS)) {\r\n            requestAnimationFrame(mainLoop);\r\n            return;\r\n        }\r\n        delta += timestamp - lastFrameTimeMs;\r\n        lastFrameTimeMs = timestamp;\r\n\r\n        begin(timestamp, delta);\r\n\r\n        if (timestamp > lastFpsUpdate + 1000) {\r\n            fps = 0.25 * framesThisSecond + 0.75 * fps;\r\n\r\n            lastFpsUpdate = timestamp;\r\n            framesThisSecond = 0;\r\n        }\r\n        framesThisSecond++;\r\n\r\n        var numUpdateSteps = 0;\r\n        while (delta >= timestep) {\r\n            update(timestep);\r\n            delta -= timestep;\r\n            if (++numUpdateSteps >= 240) {\r\n                panic();\r\n                break;\r\n            }\r\n        }\r\n\r\n        draw(delta / timestep);\r\n\r\n        end(fps);\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n\r\n    container.addEventListener(\"mousemove\", function(event) {\r\n        playerXPosition = event.offsetX; // + Math.floor(event.offsetWidth / 2);\r\n        playerYPosition = event.offsetY; // + Math.floor(event.offsetHeight / 2);\r\n        // console.log(\"Mouse offset position: \" + event.offsetX + \" \" + event.offsetY);\r\n\r\n    })\r\n    container.addEventListener(\"mouseenter\", function() {\r\n        playerInsideArena = true;\r\n        playerXPosition = -1;\r\n        playerYPosition = -1;\r\n    })\r\n    container.addEventListener(\"mouseleave\", function() {\r\n        playerInsideArena = false;\r\n        playerXPosition = -1;\r\n        playerYPosition = -1;\r\n    })\r\n    var mouse = {\r\n        _x: 0,\r\n        _y: 0,\r\n        x: 0,\r\n        y: 0,\r\n        updatePosition: function(event) {\r\n            var e = event || window.event;\r\n            this.x = e.clientX - this._x;\r\n            this.y = (e.clientY - this._y) * -1;\r\n        },\r\n        setOrigin: function(e) {\r\n            this._x = e.offsetLeft + Math.floor(e.offsetWidth / 2);\r\n            this._y = e.offsetTop + Math.floor(e.offsetHeight / 2);\r\n        },\r\n        show: function() {\r\n            return \"(\" + this.x + \", \" + this.y + \")\";\r\n        }\r\n    };\r\n});\r\n\r\n/*\r\n$(document).ready(function() {\r\n\tconsole.log(\"pacman ready\");\r\n    // Init\r\n    // grab elements\r\n    let container = document.getElementById(\"arena\");\r\n    let pacman = document.getElementById(\"pacman\");\r\n    // initialize pacman and player positions\r\n    let pacmanXPosition = 10;\r\n    let pacmanYPosition = 10;\r\n    let pacmanVelocity = 0.08;\r\n    let playerLastXPosition = 5;\r\n    let playerLastYPosition = 5;\r\n    // game loop variables\r\n    let timestep = 1000 / 60;\r\n    let lastFrameTimeMs = 0;\r\n    let delta = 0;\r\n    let fps = 60;\r\n    let maxFPS = 10;\r\n    // Mouse\r\n    var mouse = {\r\n        _x: 0,\r\n        _y: 0,\r\n        x: 0,\r\n        y: 0,\r\n        updatePosition: function(event) {\r\n            var e = event || window.event;\r\n            this.x = e.clientX - this._x;\r\n            this.y = (e.clientY - this._y) * -1;\r\n        },\r\n        setOrigin: function(e) {\r\n            this._x = e.offsetLeft + Math.floor(e.offsetWidth / 2);\r\n            this._y = e.offsetTop + Math.floor(e.offsetHeight / 2);\r\n        },\r\n        show: function() {\r\n            return \"(\" + this.x + \", \" + this.y + \")\";\r\n        }\r\n    };\r\n  \r\n    // Track the mouse position relative to the center of the container.\r\n    mouse.setOrigin(container);\r\n\r\n  \r\n    //-----------------------------------------\r\n    var update = function(event) {\r\n      mouse.updatePosition(event);\r\n        // console.log(\"P_x: \" + pacman.offsetLeft + \" P_y: \" + pacman.offsetTop);\r\n        // console.log(\"M_x: \" + mouse.x + \" M_y: \" + mouse.y);\r\n        // console.log(Math.atan2(pacman.offsetLeft - mouse.y, pacman.offsetTop - mouse.x));\r\n        // var center_x = (pacman.left) + (pacman.width() / 2);\r\n        // var center_y = (pacman.top) + (pacman.height() / 2);\r\n        // console.log(event);\r\n        // console.log(\"Pacman position: \" + pacman.offsetLeft + \" \" + pacman.offsetTop);\r\n        // console.log(\"Mouse offset position: \" + event.offsetX + \" \" + event.offsetY);\r\n        // console.log(\"Mouse Position: \" + event.pageX + \" \" + event.pageY);\r\n        var center_x = (pacman.offsetLeft);\r\n        var center_y = (pacman.offsetTop);\r\n        // var mouse_x = event.pageX;\r\n        var mouse_x = event.offsetX;\r\n        // var mouse_y = event.pageY;\r\n        var mouse_y = event.offsetY;\r\n        playerLastXPosition = event.offsetX;\r\n        playerLastYPosition = event.offsetY;\r\n        // var radians = Math.atan2(mouse_x - center_x, mouse_y - center_y);\r\n        // console.log(radians);\r\n        // var degree = (radians * (180 / Math.PI) * -1) + 90;\r\n        // console.log(degree);\r\n      updateTransformStyle(\r\n        /*(mouse.y / pacman.offsetHeight / 2).toFixed(2),\r\n        (mouse.x / pacman.offsetWidth / 2).toFixed(2)*/ /*\r\n        mouse_x - center_x, mouse_y - center_y\r\n      );\r\n      \r\n    };\r\n});\r\n*/"],"sourceRoot":""}